{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,oGAmBeE,EAAoBC,EAAoBC,G,OAAxCC,EAAmBC,MAAAC,KAAAC,U,UAAnBH,I,OAAAA,EAAfI,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAAmCT,EAAoBC,G,IAE7CS,EASAC,EAIAC,E,2FAbgBZ,I,UAEC,KAFjBU,EAAOG,EAAAC,MAEDC,OAAY,C,sBACtBC,EAAAC,IAAIC,YAAYC,UAAUC,OAAO,aAEjCC,I,2CAIkBC,QAAQC,IAC1Bb,EAAQc,KAAI,SAAAC,G,OAAM,EAAAC,EAAAC,eAAcF,GAAIG,MAAK,SAAAC,G,OAAQA,EAAKC,I,gBADlDnB,EAAKE,EAAAC,KAILF,EAAoBD,EAAMa,KAAI,SAAAO,GAClC,IAAMC,EAAYD,EAAKE,OAAOT,KAAI,SAAAU,G,OAASA,EAAMT,E,IACjD,OAAOnB,EAAA6B,EAAA,IAAKJ,EAAI,CAAEC,a,IAGpBhB,EAAAC,IAAIC,YAAYC,UAAUiB,IAAI,cAC9B,EAAAC,EAAAC,mBAAkBtB,EAAAC,IAAKL,G,kDAEvB2B,QAAQC,MAAM,8BAAmCC,OAALxC,EAAK,WAAUY,EAAA6B,GAAMC,SACjEC,EAAAC,OAAOC,QAAQ,8BAAmCL,OAALxC,EAAK,Y,2DAxBpBE,MAAAC,KAAAC,U,CA4BlC,SAASgB,IACPL,EAAAC,IAAI8B,mBAAmBC,UAAY,E,CAOrC,SAASC,IACHjC,EAAAC,IAAIiC,kBAAkB/B,UAAUgC,SAAS,8BAC3CpD,EAAoBqD,EAAAC,kBAAmB,WAEvCrC,EAAAC,IAAIqC,gBAAgBnC,UAAUgC,SAAS,+BAEvCpD,EAAoBqD,EAAAG,gBAAiB,S,CAvDzCxD,EAAoBqD,EAAAC,kBAAmB,WAEvCrC,EAAAC,IAAIiC,kBAAkBM,iBAAiB,SAAS,WAC9CxC,EAAAC,IAAIiC,kBAAkB/B,UAAUiB,IAAI,8BACpCpB,EAAAC,IAAIqC,gBAAgBnC,UAAUC,OAAO,8BACrCrB,EAAoBqD,EAAAC,kBAAmB,U,IAEzCrC,EAAAC,IAAIqC,gBAAgBE,iBAAiB,SAAS,WAC5CxC,EAAAC,IAAIqC,gBAAgBnC,UAAUiB,IAAI,8BAClCpB,EAAAC,IAAIiC,kBAAkB/B,UAAUC,OAAO,8BACvCrB,EAAoBqD,EAAAG,gBAAiB,S,IAmCvCvC,EAAAC,IAAIwC,cAAcD,iBAAiB,QAASP,GAC5CjC,EAAAC,IAAIyC,WAAWF,iBAAiB,UAAWP,GAC3CjC,EAAAC,IAAIyC,WAAWF,iBAAiB,QAASP,G","sources":["src/library.js","src/js/render/renderWatchedFilms.js"],"sourcesContent":["import './js/myLibrary/localStorage';\nimport './js/render/renderWatchedFilms';\n// import './js/pagination/pagination';\nimport './js/modal';\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getWatchedFilmIds, getQueueFilmIds } from '../myLibrary/localStorage';\nimport { insertMovieMarkup } from './renderSearchFilms';\nimport { fetchFilmById } from '../api/movieAPI';\nimport { ref } from '../references';\n\nfetchAndRenderFilms(getWatchedFilmIds, 'watched');\n\nref.btnLibraryWatched.addEventListener('click', () => {\n  ref.btnLibraryWatched.classList.add('header-library__btn-active');\n  ref.btnLibraryQueue.classList.remove('header-library__btn-active');\n  fetchAndRenderFilms(getWatchedFilmIds, 'watched');\n});\nref.btnLibraryQueue.addEventListener('click', () => {\n  ref.btnLibraryQueue.classList.add('header-library__btn-active');\n  ref.btnLibraryWatched.classList.remove('header-library__btn-active');\n  fetchAndRenderFilms(getQueueFilmIds, 'queued');\n});\n\nasync function fetchAndRenderFilms(getFilmIdsFunction, type) {\n  try {\n    const filmIds = await getFilmIdsFunction();\n\n    if (filmIds.length === 0) {\n      ref.notImgStile.classList.remove('is-hidden');\n\n      clearGallery();\n      return;\n    }\n\n    const films = await Promise.all(\n      filmIds.map(id => fetchFilmById(id).then(item => item.data))\n    );\n\n    const filmsWithGenreIds = films.map(film => {\n      const genre_ids = film.genres.map(genre => genre.id);\n      return { ...film, genre_ids };\n    });\n\n    ref.notImgStile.classList.add('is-hidden');\n    insertMovieMarkup(ref, filmsWithGenreIds);\n  } catch (error) {\n    console.error(`Failed to fetch and render ${type} films:`, error.message);\n    Notify.failure(`Failed to fetch and render ${type} films.`);\n  }\n}\n\nfunction clearGallery() {\n  ref.libraryGalleryList.innerHTML = '';\n}\n\nref.closeModalBtn.addEventListener('click', handleModalEvent);\nref.movieModal.addEventListener('keydown', handleModalEvent);\nref.movieModal.addEventListener('click', handleModalEvent);\n\nfunction handleModalEvent() {\n  if (ref.btnLibraryWatched.classList.contains('header-library__btn-active')) {\n    fetchAndRenderFilms(getWatchedFilmIds, 'watched');\n  } else if (\n    ref.btnLibraryQueue.classList.contains('header-library__btn-active')\n  ) {\n    fetchAndRenderFilms(getQueueFilmIds, 'queued');\n  }\n}\n"],"names":["parcelRequire","$bpxeT","$9f9e4a01ab50e4a8$var$fetchAndRenderFilms","getFilmIdsFunction","type","$9f9e4a01ab50e4a8$var$_fetchAndRenderFilms","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","filmIds","films","filmsWithGenreIds","_ctx","sent","length","$go8W7","ref","notImgStile","classList","remove","$9f9e4a01ab50e4a8$var$clearGallery","Promise","all","map","id","$8NbBk","fetchFilmById","then","item","data","film","genre_ids","genres","genre","$dDDEV","add","$eOhzM","insertMovieMarkup","console","error","concat","t0","message","$h6c0i","Notify","failure","libraryGalleryList","innerHTML","$9f9e4a01ab50e4a8$var$handleModalEvent","btnLibraryWatched","contains","$1Xhij","getWatchedFilmIds","btnLibraryQueue","getQueueFilmIds","addEventListener","closeModalBtn","movieModal"],"version":3,"file":"my-library.5c2b5f37.js.map"}