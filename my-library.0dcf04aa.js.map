{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,oDAaAE,eAAeC,EAAoBC,EAAoBC,GACrD,IACE,MAAMC,QAAgBF,IAMhBG,SAJcC,QAAQC,IAC1BH,EAAQI,KAAIC,IAAM,EAAAC,EAAAC,eAAcF,GAAIG,MAAKC,GAAQA,EAAKC,WAGxBN,KAAIO,IAClC,MAAMC,EAAYD,EAAKE,OAAOT,KAAIU,GAASA,EAAMT,KACjD,MAAO,IAAKM,E,UAAMC,EAAW,IAG/BG,EAAAC,IAAIC,YAAYC,UAAUC,IAAI,cAC9B,EAAAC,EAAAC,mBAAkBN,EAAAC,IAAKf,E,CACvB,MAAOqB,GACPC,QAAQD,MAAM,8BAA8BvB,WAAeuB,EAAME,SACjE7B,EAAA8B,OAAOC,QAAQ,8BAA8B3B,W,EAxBjDgB,EAAAC,IAAIW,kBAAkBC,iBAAiB,SAAS,IAC9C/B,EAAoBgC,EAAAC,kBAAmB,aAEzCf,EAAAC,IAAIe,gBAAgBH,iBAAiB,SAAS,IAC5C/B,EAAoBgC,EAAAG,gBAAiB,Y","sources":["src/library.js","src/js/render/renderWatchedFilms.js"],"sourcesContent":["import './js/myLibrary/localStorage';\nimport './js/render/renderWatchedFilms';\n// import './js/pagination/pagination';\nimport './js/modal';\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getWatchedFilmIds, getQueueFilmIds } from '../myLibrary/localStorage';\nimport { insertMovieMarkup } from './renderSearchFilms';\nimport { fetchFilmById } from '../api/movieAPI';\nimport { ref } from '../references';\n\nref.btnLibraryWatched.addEventListener('click', () =>\n  fetchAndRenderFilms(getWatchedFilmIds, 'watched')\n);\nref.btnLibraryQueue.addEventListener('click', () =>\n  fetchAndRenderFilms(getQueueFilmIds, 'queued')\n);\n\nasync function fetchAndRenderFilms(getFilmIdsFunction, type) {\n  try {\n    const filmIds = await getFilmIdsFunction();\n\n    const films = await Promise.all(\n      filmIds.map(id => fetchFilmById(id).then(item => item.data))\n    );\n\n    const filmsWithGenreIds = films.map(film => {\n      const genre_ids = film.genres.map(genre => genre.id);\n      return { ...film, genre_ids };\n    });\n\n    ref.notImgStile.classList.add('is-hidden');\n    insertMovieMarkup(ref, filmsWithGenreIds);\n  } catch (error) {\n    console.error(`Failed to fetch and render ${type} films:`, error.message);\n    Notify.failure(`Failed to fetch and render ${type} films.`);\n  }\n}\n"],"names":["parcelRequire","$iQIUW","async","$87e5825ff5418fb0$var$fetchAndRenderFilms","getFilmIdsFunction","type","filmIds","filmsWithGenreIds","Promise","all","map","id","$k8mky","fetchFilmById","then","item","data","film","genre_ids","genres","genre","$1sEOH","ref","notImgStile","classList","add","$ccLkp","insertMovieMarkup","error","console","message","Notify","failure","btnLibraryWatched","addEventListener","$86fEG","getWatchedFilmIds","btnLibraryQueue","getQueueFilmIds"],"version":3,"file":"my-library.0dcf04aa.js.map"}