var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},t={},i=e.parcelRequire4383;null==i&&((i=function(e){if(e in r)return r[e].exports;if(e in t){var i=t[e];delete t[e];var n={id:e,exports:{}};return r[e]=n,i.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,r){t[e]=r},e.parcelRequire4383=i),i("86fEG");var n=i("iQIUW"),a=i("86fEG"),d=i("ccLkp"),o=i("k8mky"),l=i("1sEOH");async function s(e,r){try{const r=await e(),t=(await Promise.all(r.map((e=>(0,o.fetchFilmById)(e).then((e=>e.data)))))).map((e=>{const r=e.genres.map((e=>e.id));return{...e,genre_ids:r}}));l.ref.notImgStile.classList.add("is-hidden"),(0,d.insertMovieMarkup)(l.ref,t)}catch(e){console.error(`Failed to fetch and render ${r} films:`,e.message),n.Notify.failure(`Failed to fetch and render ${r} films.`)}}l.ref.btnLibraryWatched.addEventListener("click",(()=>s(a.getWatchedFilmIds,"watched"))),l.ref.btnLibraryQueue.addEventListener("click",(()=>s(a.getQueueFilmIds,"queued"))),i("bTcpz");
//# sourceMappingURL=my-library.0dcf04aa.js.map
